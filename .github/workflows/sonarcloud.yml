---
name: SonarCloud

on: # yamllint disable-line rule:truthy
  push:
    branches: ["main"]
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  build:
    name: Build and analyze
    runs-on: windows-2025
    steps:
      - name: Set up JDK
        uses: actions/setup-java@v5
        with:
          java-version: 21
          # Alternative distribution options are available.
          distribution: "temurin"
      - uses: actions/checkout@v5
        with:
          # Shallow clones should be disabled for a better relevancy of analysis
          fetch-depth: 0
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          # Needed to get PR information, if any
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin `
          /k:"sir-gon_algorithm-exercises-csharp" `
          /o:"sir-gon" /d:sonar.token="${{ env.SONAR_TOKEN }}" `
          /d:sonar.host.url="https://sonarcloud.io" `
          /d:sonar.cs.opencover.reportsPaths=**/coverage.opencover.xml

          dotnet restore
          dotnet build --no-restore
          dotnet test --no-build --verbosity normal
          .\.sonar\scanner\dotnet-sonarscanner end `
          /d:sonar.token="${{ env.SONAR_TOKEN }}"
